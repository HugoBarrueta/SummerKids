#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SummerKidsEntity.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SummerKids")]
	public partial class DCGeneralDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertActividad(Actividad instance);
    partial void UpdateActividad(Actividad instance);
    partial void DeleteActividad(Actividad instance);
    partial void InsertActividadNinio(ActividadNinio instance);
    partial void UpdateActividadNinio(ActividadNinio instance);
    partial void DeleteActividadNinio(ActividadNinio instance);
    partial void InsertCatEstadoActividad(CatEstadoActividad instance);
    partial void UpdateCatEstadoActividad(CatEstadoActividad instance);
    partial void DeleteCatEstadoActividad(CatEstadoActividad instance);
    partial void InsertCatEstadoActividadNino(CatEstadoActividadNino instance);
    partial void UpdateCatEstadoActividadNino(CatEstadoActividadNino instance);
    partial void DeleteCatEstadoActividadNino(CatEstadoActividadNino instance);
    partial void InsertCatEstadoCivil(CatEstadoCivil instance);
    partial void UpdateCatEstadoCivil(CatEstadoCivil instance);
    partial void DeleteCatEstadoCivil(CatEstadoCivil instance);
    partial void InsertCatSexo(CatSexo instance);
    partial void UpdateCatSexo(CatSexo instance);
    partial void DeleteCatSexo(CatSexo instance);
    partial void InsertCatTipoUser(CatTipoUser instance);
    partial void UpdateCatTipoUser(CatTipoUser instance);
    partial void DeleteCatTipoUser(CatTipoUser instance);
    partial void InsertMaestro(Maestro instance);
    partial void UpdateMaestro(Maestro instance);
    partial void DeleteMaestro(Maestro instance);
    partial void InsertNinio(Ninio instance);
    partial void UpdateNinio(Ninio instance);
    partial void DeleteNinio(Ninio instance);
    partial void InsertTutor(Tutor instance);
    partial void UpdateTutor(Tutor instance);
    partial void DeleteTutor(Tutor instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DCGeneralDataContext() : 
				base(global::SummerKidsEntity.Properties.Settings.Default.SummerKidsConnectionStringCarlos, mappingSource)
		{
			OnCreated();
		}
		
		public DCGeneralDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCGeneralDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCGeneralDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCGeneralDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actividad> Actividad
		{
			get
			{
				return this.GetTable<Actividad>();
			}
		}
		
		public System.Data.Linq.Table<ActividadNinio> ActividadNinio
		{
			get
			{
				return this.GetTable<ActividadNinio>();
			}
		}
		
		public System.Data.Linq.Table<CatEstadoActividad> CatEstadoActividad
		{
			get
			{
				return this.GetTable<CatEstadoActividad>();
			}
		}
		
		public System.Data.Linq.Table<CatEstadoActividadNino> CatEstadoActividadNino
		{
			get
			{
				return this.GetTable<CatEstadoActividadNino>();
			}
		}
		
		public System.Data.Linq.Table<CatEstadoCivil> CatEstadoCivil
		{
			get
			{
				return this.GetTable<CatEstadoCivil>();
			}
		}
		
		public System.Data.Linq.Table<CatSexo> CatSexo
		{
			get
			{
				return this.GetTable<CatSexo>();
			}
		}
		
		public System.Data.Linq.Table<CatTipoUser> CatTipoUser
		{
			get
			{
				return this.GetTable<CatTipoUser>();
			}
		}
		
		public System.Data.Linq.Table<EvidenciaActividad> EvidenciaActividad
		{
			get
			{
				return this.GetTable<EvidenciaActividad>();
			}
		}
		
		public System.Data.Linq.Table<Maestro> Maestro
		{
			get
			{
				return this.GetTable<Maestro>();
			}
		}
		
		public System.Data.Linq.Table<Ninio> Ninio
		{
			get
			{
				return this.GetTable<Ninio>();
			}
		}
		
		public System.Data.Linq.Table<Tutor> Tutor
		{
			get
			{
				return this.GetTable<Tutor>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actividad")]
	public partial class Actividad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombreCurso;
		
		private System.Nullable<System.DateTime> _dteFechaRegistro;
		
		private System.Nullable<System.DateTime> _dteHoraInicio;
		
		private System.Nullable<System.DateTime> _dteHoraFin;
		
		private int _idMaestros;
		
		private System.Nullable<int> _idCatEstadoActividad;
		
		private string _strDescripcion;
		
		private System.Data.Linq.Binary _imaActivity;
		
		private int _BonoActividad;
		
		private EntitySet<ActividadNinio> _ActividadNinio;
		
		private EntityRef<CatEstadoActividad> _CatEstadoActividad;
		
		private EntityRef<Maestro> _Maestro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreCursoChanging(string value);
    partial void OnstrNombreCursoChanged();
    partial void OndteFechaRegistroChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaRegistroChanged();
    partial void OndteHoraInicioChanging(System.Nullable<System.DateTime> value);
    partial void OndteHoraInicioChanged();
    partial void OndteHoraFinChanging(System.Nullable<System.DateTime> value);
    partial void OndteHoraFinChanged();
    partial void OnidMaestrosChanging(int value);
    partial void OnidMaestrosChanged();
    partial void OnidCatEstadoActividadChanging(System.Nullable<int> value);
    partial void OnidCatEstadoActividadChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    partial void OnimaActivityChanging(System.Data.Linq.Binary value);
    partial void OnimaActivityChanged();
    partial void OnBonoActividadChanging(int value);
    partial void OnBonoActividadChanged();
    #endregion
		
		public Actividad()
		{
			this._ActividadNinio = new EntitySet<ActividadNinio>(new Action<ActividadNinio>(this.attach_ActividadNinio), new Action<ActividadNinio>(this.detach_ActividadNinio));
			this._CatEstadoActividad = default(EntityRef<CatEstadoActividad>);
			this._Maestro = default(EntityRef<Maestro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombreCurso", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strNombreCurso
		{
			get
			{
				return this._strNombreCurso;
			}
			set
			{
				if ((this._strNombreCurso != value))
				{
					this.OnstrNombreCursoChanging(value);
					this.SendPropertyChanging();
					this._strNombreCurso = value;
					this.SendPropertyChanged("strNombreCurso");
					this.OnstrNombreCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaRegistro", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaRegistro
		{
			get
			{
				return this._dteFechaRegistro;
			}
			set
			{
				if ((this._dteFechaRegistro != value))
				{
					this.OndteFechaRegistroChanging(value);
					this.SendPropertyChanging();
					this._dteFechaRegistro = value;
					this.SendPropertyChanged("dteFechaRegistro");
					this.OndteFechaRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteHoraInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteHoraInicio
		{
			get
			{
				return this._dteHoraInicio;
			}
			set
			{
				if ((this._dteHoraInicio != value))
				{
					this.OndteHoraInicioChanging(value);
					this.SendPropertyChanging();
					this._dteHoraInicio = value;
					this.SendPropertyChanged("dteHoraInicio");
					this.OndteHoraInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteHoraFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteHoraFin
		{
			get
			{
				return this._dteHoraFin;
			}
			set
			{
				if ((this._dteHoraFin != value))
				{
					this.OndteHoraFinChanging(value);
					this.SendPropertyChanging();
					this._dteHoraFin = value;
					this.SendPropertyChanged("dteHoraFin");
					this.OndteHoraFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMaestros", DbType="Int NOT NULL")]
		public int idMaestros
		{
			get
			{
				return this._idMaestros;
			}
			set
			{
				if ((this._idMaestros != value))
				{
					if (this._Maestro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMaestrosChanging(value);
					this.SendPropertyChanging();
					this._idMaestros = value;
					this.SendPropertyChanged("idMaestros");
					this.OnidMaestrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatEstadoActividad", DbType="Int")]
		public System.Nullable<int> idCatEstadoActividad
		{
			get
			{
				return this._idCatEstadoActividad;
			}
			set
			{
				if ((this._idCatEstadoActividad != value))
				{
					if (this._CatEstadoActividad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatEstadoActividadChanging(value);
					this.SendPropertyChanging();
					this._idCatEstadoActividad = value;
					this.SendPropertyChanged("idCatEstadoActividad");
					this.OnidCatEstadoActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(500)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imaActivity", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary imaActivity
		{
			get
			{
				return this._imaActivity;
			}
			set
			{
				if ((this._imaActivity != value))
				{
					this.OnimaActivityChanging(value);
					this.SendPropertyChanging();
					this._imaActivity = value;
					this.SendPropertyChanged("imaActivity");
					this.OnimaActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonoActividad", DbType="Int NOT NULL")]
		public int BonoActividad
		{
			get
			{
				return this._BonoActividad;
			}
			set
			{
				if ((this._BonoActividad != value))
				{
					this.OnBonoActividadChanging(value);
					this.SendPropertyChanging();
					this._BonoActividad = value;
					this.SendPropertyChanged("BonoActividad");
					this.OnBonoActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividad_ActividadNinio", Storage="_ActividadNinio", ThisKey="id", OtherKey="idActividad")]
		public EntitySet<ActividadNinio> ActividadNinio
		{
			get
			{
				return this._ActividadNinio;
			}
			set
			{
				this._ActividadNinio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstadoActividad_Actividad", Storage="_CatEstadoActividad", ThisKey="idCatEstadoActividad", OtherKey="id", IsForeignKey=true)]
		public CatEstadoActividad CatEstadoActividad
		{
			get
			{
				return this._CatEstadoActividad.Entity;
			}
			set
			{
				CatEstadoActividad previousValue = this._CatEstadoActividad.Entity;
				if (((previousValue != value) 
							|| (this._CatEstadoActividad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEstadoActividad.Entity = null;
						previousValue.Actividad.Remove(this);
					}
					this._CatEstadoActividad.Entity = value;
					if ((value != null))
					{
						value.Actividad.Add(this);
						this._idCatEstadoActividad = value.id;
					}
					else
					{
						this._idCatEstadoActividad = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEstadoActividad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Actividad", Storage="_Maestro", ThisKey="idMaestros", OtherKey="id", IsForeignKey=true)]
		public Maestro Maestro
		{
			get
			{
				return this._Maestro.Entity;
			}
			set
			{
				Maestro previousValue = this._Maestro.Entity;
				if (((previousValue != value) 
							|| (this._Maestro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maestro.Entity = null;
						previousValue.Actividad.Remove(this);
					}
					this._Maestro.Entity = value;
					if ((value != null))
					{
						value.Actividad.Add(this);
						this._idMaestros = value.id;
					}
					else
					{
						this._idMaestros = default(int);
					}
					this.SendPropertyChanged("Maestro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActividadNinio(ActividadNinio entity)
		{
			this.SendPropertyChanging();
			entity.Actividad = this;
		}
		
		private void detach_ActividadNinio(ActividadNinio entity)
		{
			this.SendPropertyChanging();
			entity.Actividad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActividadNinio")]
	public partial class ActividadNinio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idNino;
		
		private int _idActividad;
		
		private System.Nullable<int> _Bono;
		
		private System.Nullable<int> _idCatEstadoActividadNino;
		
		private EntityRef<Actividad> _Actividad;
		
		private EntityRef<CatEstadoActividadNino> _CatEstadoActividadNino;
		
		private EntityRef<Ninio> _Ninio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidNinoChanging(int value);
    partial void OnidNinoChanged();
    partial void OnidActividadChanging(int value);
    partial void OnidActividadChanged();
    partial void OnBonoChanging(System.Nullable<int> value);
    partial void OnBonoChanged();
    partial void OnidCatEstadoActividadNinoChanging(System.Nullable<int> value);
    partial void OnidCatEstadoActividadNinoChanged();
    #endregion
		
		public ActividadNinio()
		{
			this._Actividad = default(EntityRef<Actividad>);
			this._CatEstadoActividadNino = default(EntityRef<CatEstadoActividadNino>);
			this._Ninio = default(EntityRef<Ninio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNino", DbType="Int NOT NULL")]
		public int idNino
		{
			get
			{
				return this._idNino;
			}
			set
			{
				if ((this._idNino != value))
				{
					if (this._Ninio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNinoChanging(value);
					this.SendPropertyChanging();
					this._idNino = value;
					this.SendPropertyChanged("idNino");
					this.OnidNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idActividad", DbType="Int NOT NULL")]
		public int idActividad
		{
			get
			{
				return this._idActividad;
			}
			set
			{
				if ((this._idActividad != value))
				{
					if (this._Actividad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidActividadChanging(value);
					this.SendPropertyChanging();
					this._idActividad = value;
					this.SendPropertyChanged("idActividad");
					this.OnidActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bono", DbType="Int")]
		public System.Nullable<int> Bono
		{
			get
			{
				return this._Bono;
			}
			set
			{
				if ((this._Bono != value))
				{
					this.OnBonoChanging(value);
					this.SendPropertyChanging();
					this._Bono = value;
					this.SendPropertyChanged("Bono");
					this.OnBonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatEstadoActividadNino", DbType="Int")]
		public System.Nullable<int> idCatEstadoActividadNino
		{
			get
			{
				return this._idCatEstadoActividadNino;
			}
			set
			{
				if ((this._idCatEstadoActividadNino != value))
				{
					if (this._CatEstadoActividadNino.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatEstadoActividadNinoChanging(value);
					this.SendPropertyChanging();
					this._idCatEstadoActividadNino = value;
					this.SendPropertyChanged("idCatEstadoActividadNino");
					this.OnidCatEstadoActividadNinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividad_ActividadNinio", Storage="_Actividad", ThisKey="idActividad", OtherKey="id", IsForeignKey=true)]
		public Actividad Actividad
		{
			get
			{
				return this._Actividad.Entity;
			}
			set
			{
				Actividad previousValue = this._Actividad.Entity;
				if (((previousValue != value) 
							|| (this._Actividad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actividad.Entity = null;
						previousValue.ActividadNinio.Remove(this);
					}
					this._Actividad.Entity = value;
					if ((value != null))
					{
						value.ActividadNinio.Add(this);
						this._idActividad = value.id;
					}
					else
					{
						this._idActividad = default(int);
					}
					this.SendPropertyChanged("Actividad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstadoActividadNino_ActividadNinio", Storage="_CatEstadoActividadNino", ThisKey="idCatEstadoActividadNino", OtherKey="id", IsForeignKey=true)]
		public CatEstadoActividadNino CatEstadoActividadNino
		{
			get
			{
				return this._CatEstadoActividadNino.Entity;
			}
			set
			{
				CatEstadoActividadNino previousValue = this._CatEstadoActividadNino.Entity;
				if (((previousValue != value) 
							|| (this._CatEstadoActividadNino.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEstadoActividadNino.Entity = null;
						previousValue.ActividadNinio.Remove(this);
					}
					this._CatEstadoActividadNino.Entity = value;
					if ((value != null))
					{
						value.ActividadNinio.Add(this);
						this._idCatEstadoActividadNino = value.id;
					}
					else
					{
						this._idCatEstadoActividadNino = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEstadoActividadNino");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ninio_ActividadNinio", Storage="_Ninio", ThisKey="idNino", OtherKey="id", IsForeignKey=true)]
		public Ninio Ninio
		{
			get
			{
				return this._Ninio.Entity;
			}
			set
			{
				Ninio previousValue = this._Ninio.Entity;
				if (((previousValue != value) 
							|| (this._Ninio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ninio.Entity = null;
						previousValue.ActividadNinio.Remove(this);
					}
					this._Ninio.Entity = value;
					if ((value != null))
					{
						value.ActividadNinio.Add(this);
						this._idNino = value.id;
					}
					else
					{
						this._idNino = default(int);
					}
					this.SendPropertyChanged("Ninio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatEstadoActividad")]
	public partial class CatEstadoActividad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Actividad> _Actividad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatEstadoActividad()
		{
			this._Actividad = new EntitySet<Actividad>(new Action<Actividad>(this.attach_Actividad), new Action<Actividad>(this.detach_Actividad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstadoActividad_Actividad", Storage="_Actividad", ThisKey="id", OtherKey="idCatEstadoActividad")]
		public EntitySet<Actividad> Actividad
		{
			get
			{
				return this._Actividad;
			}
			set
			{
				this._Actividad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actividad(Actividad entity)
		{
			this.SendPropertyChanging();
			entity.CatEstadoActividad = this;
		}
		
		private void detach_Actividad(Actividad entity)
		{
			this.SendPropertyChanging();
			entity.CatEstadoActividad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatEstadoActividadNino")]
	public partial class CatEstadoActividadNino : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ActividadNinio> _ActividadNinio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatEstadoActividadNino()
		{
			this._ActividadNinio = new EntitySet<ActividadNinio>(new Action<ActividadNinio>(this.attach_ActividadNinio), new Action<ActividadNinio>(this.detach_ActividadNinio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstadoActividadNino_ActividadNinio", Storage="_ActividadNinio", ThisKey="id", OtherKey="idCatEstadoActividadNino")]
		public EntitySet<ActividadNinio> ActividadNinio
		{
			get
			{
				return this._ActividadNinio;
			}
			set
			{
				this._ActividadNinio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActividadNinio(ActividadNinio entity)
		{
			this.SendPropertyChanging();
			entity.CatEstadoActividadNino = this;
		}
		
		private void detach_ActividadNinio(ActividadNinio entity)
		{
			this.SendPropertyChanging();
			entity.CatEstadoActividadNino = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatEstadoCivil")]
	public partial class CatEstadoCivil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Tutor> _Tutor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatEstadoCivil()
		{
			this._Tutor = new EntitySet<Tutor>(new Action<Tutor>(this.attach_Tutor), new Action<Tutor>(this.detach_Tutor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstadoCivil_Tutor", Storage="_Tutor", ThisKey="id", OtherKey="idCatEstadoCivil")]
		public EntitySet<Tutor> Tutor
		{
			get
			{
				return this._Tutor;
			}
			set
			{
				this._Tutor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tutor(Tutor entity)
		{
			this.SendPropertyChanging();
			entity.CatEstadoCivil = this;
		}
		
		private void detach_Tutor(Tutor entity)
		{
			this.SendPropertyChanging();
			entity.CatEstadoCivil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatSexo")]
	public partial class CatSexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<Ninio> _Ninio;
		
		private EntitySet<Tutor> _Tutor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatSexo()
		{
			this._Ninio = new EntitySet<Ninio>(new Action<Ninio>(this.attach_Ninio), new Action<Ninio>(this.detach_Ninio));
			this._Tutor = new EntitySet<Tutor>(new Action<Tutor>(this.attach_Tutor), new Action<Tutor>(this.detach_Tutor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatSexo_Ninio", Storage="_Ninio", ThisKey="id", OtherKey="idCatSexo")]
		public EntitySet<Ninio> Ninio
		{
			get
			{
				return this._Ninio;
			}
			set
			{
				this._Ninio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatSexo_Tutor", Storage="_Tutor", ThisKey="id", OtherKey="idCatSexo")]
		public EntitySet<Tutor> Tutor
		{
			get
			{
				return this._Tutor;
			}
			set
			{
				this._Tutor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ninio(Ninio entity)
		{
			this.SendPropertyChanging();
			entity.CatSexo = this;
		}
		
		private void detach_Ninio(Ninio entity)
		{
			this.SendPropertyChanging();
			entity.CatSexo = null;
		}
		
		private void attach_Tutor(Tutor entity)
		{
			this.SendPropertyChanging();
			entity.CatSexo = this;
		}
		
		private void detach_Tutor(Tutor entity)
		{
			this.SendPropertyChanging();
			entity.CatSexo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatTipoUser")]
	public partial class CatTipoUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<User> _User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatTipoUser()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoUser_User", Storage="_User", ThisKey="id", OtherKey="idCatTipoUser")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoUser = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvidenciaActividad")]
	public partial class EvidenciaActividad
	{
		
		private int _id;
		
		public EvidenciaActividad()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maestro")]
	public partial class Maestro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombres;
		
		private string _strAPaterno;
		
		private string _strAMaterno;
		
		private EntitySet<Actividad> _Actividad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombresChanging(string value);
    partial void OnstrNombresChanged();
    partial void OnstrAPaternoChanging(string value);
    partial void OnstrAPaternoChanged();
    partial void OnstrAMaternoChanging(string value);
    partial void OnstrAMaternoChanged();
    #endregion
		
		public Maestro()
		{
			this._Actividad = new EntitySet<Actividad>(new Action<Actividad>(this.attach_Actividad), new Action<Actividad>(this.detach_Actividad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombres", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strNombres
		{
			get
			{
				return this._strNombres;
			}
			set
			{
				if ((this._strNombres != value))
				{
					this.OnstrNombresChanging(value);
					this.SendPropertyChanging();
					this._strNombres = value;
					this.SendPropertyChanged("strNombres");
					this.OnstrNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAPaterno", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strAPaterno
		{
			get
			{
				return this._strAPaterno;
			}
			set
			{
				if ((this._strAPaterno != value))
				{
					this.OnstrAPaternoChanging(value);
					this.SendPropertyChanging();
					this._strAPaterno = value;
					this.SendPropertyChanged("strAPaterno");
					this.OnstrAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAMaterno", DbType="VarChar(150)")]
		public string strAMaterno
		{
			get
			{
				return this._strAMaterno;
			}
			set
			{
				if ((this._strAMaterno != value))
				{
					this.OnstrAMaternoChanging(value);
					this.SendPropertyChanging();
					this._strAMaterno = value;
					this.SendPropertyChanged("strAMaterno");
					this.OnstrAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maestro_Actividad", Storage="_Actividad", ThisKey="id", OtherKey="idMaestros")]
		public EntitySet<Actividad> Actividad
		{
			get
			{
				return this._Actividad;
			}
			set
			{
				this._Actividad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Actividad(Actividad entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = this;
		}
		
		private void detach_Actividad(Actividad entity)
		{
			this.SendPropertyChanging();
			entity.Maestro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ninio")]
	public partial class Ninio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombres;
		
		private string _strAPaterno;
		
		private string _strAMaterno;
		
		private int _idTutor;
		
		private System.Nullable<int> _idCatSexo;
		
		private System.Data.Linq.Binary _varFoto;
		
		private string _strEdad;
		
		private System.Nullable<int> _TotalBono;
		
		private EntitySet<ActividadNinio> _ActividadNinio;
		
		private EntityRef<CatSexo> _CatSexo;
		
		private EntityRef<Tutor> _Tutor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombresChanging(string value);
    partial void OnstrNombresChanged();
    partial void OnstrAPaternoChanging(string value);
    partial void OnstrAPaternoChanged();
    partial void OnstrAMaternoChanging(string value);
    partial void OnstrAMaternoChanged();
    partial void OnidTutorChanging(int value);
    partial void OnidTutorChanged();
    partial void OnidCatSexoChanging(System.Nullable<int> value);
    partial void OnidCatSexoChanged();
    partial void OnvarFotoChanging(System.Data.Linq.Binary value);
    partial void OnvarFotoChanged();
    partial void OnstrEdadChanging(string value);
    partial void OnstrEdadChanged();
    partial void OnTotalBonoChanging(System.Nullable<int> value);
    partial void OnTotalBonoChanged();
    #endregion
		
		public Ninio()
		{
			this._ActividadNinio = new EntitySet<ActividadNinio>(new Action<ActividadNinio>(this.attach_ActividadNinio), new Action<ActividadNinio>(this.detach_ActividadNinio));
			this._CatSexo = default(EntityRef<CatSexo>);
			this._Tutor = default(EntityRef<Tutor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombres", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strNombres
		{
			get
			{
				return this._strNombres;
			}
			set
			{
				if ((this._strNombres != value))
				{
					this.OnstrNombresChanging(value);
					this.SendPropertyChanging();
					this._strNombres = value;
					this.SendPropertyChanged("strNombres");
					this.OnstrNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAPaterno", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strAPaterno
		{
			get
			{
				return this._strAPaterno;
			}
			set
			{
				if ((this._strAPaterno != value))
				{
					this.OnstrAPaternoChanging(value);
					this.SendPropertyChanging();
					this._strAPaterno = value;
					this.SendPropertyChanged("strAPaterno");
					this.OnstrAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAMaterno", DbType="VarChar(150)")]
		public string strAMaterno
		{
			get
			{
				return this._strAMaterno;
			}
			set
			{
				if ((this._strAMaterno != value))
				{
					this.OnstrAMaternoChanging(value);
					this.SendPropertyChanging();
					this._strAMaterno = value;
					this.SendPropertyChanged("strAMaterno");
					this.OnstrAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutor", DbType="Int NOT NULL")]
		public int idTutor
		{
			get
			{
				return this._idTutor;
			}
			set
			{
				if ((this._idTutor != value))
				{
					if (this._Tutor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutorChanging(value);
					this.SendPropertyChanging();
					this._idTutor = value;
					this.SendPropertyChanged("idTutor");
					this.OnidTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatSexo", DbType="Int")]
		public System.Nullable<int> idCatSexo
		{
			get
			{
				return this._idCatSexo;
			}
			set
			{
				if ((this._idCatSexo != value))
				{
					if (this._CatSexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatSexoChanging(value);
					this.SendPropertyChanging();
					this._idCatSexo = value;
					this.SendPropertyChanged("idCatSexo");
					this.OnidCatSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_varFoto", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary varFoto
		{
			get
			{
				return this._varFoto;
			}
			set
			{
				if ((this._varFoto != value))
				{
					this.OnvarFotoChanging(value);
					this.SendPropertyChanging();
					this._varFoto = value;
					this.SendPropertyChanged("varFoto");
					this.OnvarFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEdad", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string strEdad
		{
			get
			{
				return this._strEdad;
			}
			set
			{
				if ((this._strEdad != value))
				{
					this.OnstrEdadChanging(value);
					this.SendPropertyChanging();
					this._strEdad = value;
					this.SendPropertyChanged("strEdad");
					this.OnstrEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBono", DbType="Int")]
		public System.Nullable<int> TotalBono
		{
			get
			{
				return this._TotalBono;
			}
			set
			{
				if ((this._TotalBono != value))
				{
					this.OnTotalBonoChanging(value);
					this.SendPropertyChanging();
					this._TotalBono = value;
					this.SendPropertyChanged("TotalBono");
					this.OnTotalBonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ninio_ActividadNinio", Storage="_ActividadNinio", ThisKey="id", OtherKey="idNino")]
		public EntitySet<ActividadNinio> ActividadNinio
		{
			get
			{
				return this._ActividadNinio;
			}
			set
			{
				this._ActividadNinio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatSexo_Ninio", Storage="_CatSexo", ThisKey="idCatSexo", OtherKey="id", IsForeignKey=true)]
		public CatSexo CatSexo
		{
			get
			{
				return this._CatSexo.Entity;
			}
			set
			{
				CatSexo previousValue = this._CatSexo.Entity;
				if (((previousValue != value) 
							|| (this._CatSexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatSexo.Entity = null;
						previousValue.Ninio.Remove(this);
					}
					this._CatSexo.Entity = value;
					if ((value != null))
					{
						value.Ninio.Add(this);
						this._idCatSexo = value.id;
					}
					else
					{
						this._idCatSexo = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatSexo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutor_Ninio", Storage="_Tutor", ThisKey="idTutor", OtherKey="id", IsForeignKey=true)]
		public Tutor Tutor
		{
			get
			{
				return this._Tutor.Entity;
			}
			set
			{
				Tutor previousValue = this._Tutor.Entity;
				if (((previousValue != value) 
							|| (this._Tutor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutor.Entity = null;
						previousValue.Ninio.Remove(this);
					}
					this._Tutor.Entity = value;
					if ((value != null))
					{
						value.Ninio.Add(this);
						this._idTutor = value.id;
					}
					else
					{
						this._idTutor = default(int);
					}
					this.SendPropertyChanged("Tutor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActividadNinio(ActividadNinio entity)
		{
			this.SendPropertyChanging();
			entity.Ninio = this;
		}
		
		private void detach_ActividadNinio(ActividadNinio entity)
		{
			this.SendPropertyChanging();
			entity.Ninio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutor")]
	public partial class Tutor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombres;
		
		private string _strAPaterno;
		
		private string _strAMaterno;
		
		private int _idCatSexo;
		
		private System.DateTime _dteFechaNacimiento;
		
		private System.Nullable<int> _idCatEstadoCivil;
		
		private EntitySet<Ninio> _Ninio;
		
		private EntityRef<CatEstadoCivil> _CatEstadoCivil;
		
		private EntityRef<CatSexo> _CatSexo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombresChanging(string value);
    partial void OnstrNombresChanged();
    partial void OnstrAPaternoChanging(string value);
    partial void OnstrAPaternoChanged();
    partial void OnstrAMaternoChanging(string value);
    partial void OnstrAMaternoChanged();
    partial void OnidCatSexoChanging(int value);
    partial void OnidCatSexoChanged();
    partial void OndteFechaNacimientoChanging(System.DateTime value);
    partial void OndteFechaNacimientoChanged();
    partial void OnidCatEstadoCivilChanging(System.Nullable<int> value);
    partial void OnidCatEstadoCivilChanged();
    #endregion
		
		public Tutor()
		{
			this._Ninio = new EntitySet<Ninio>(new Action<Ninio>(this.attach_Ninio), new Action<Ninio>(this.detach_Ninio));
			this._CatEstadoCivil = default(EntityRef<CatEstadoCivil>);
			this._CatSexo = default(EntityRef<CatSexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombres", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strNombres
		{
			get
			{
				return this._strNombres;
			}
			set
			{
				if ((this._strNombres != value))
				{
					this.OnstrNombresChanging(value);
					this.SendPropertyChanging();
					this._strNombres = value;
					this.SendPropertyChanged("strNombres");
					this.OnstrNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAPaterno", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string strAPaterno
		{
			get
			{
				return this._strAPaterno;
			}
			set
			{
				if ((this._strAPaterno != value))
				{
					this.OnstrAPaternoChanging(value);
					this.SendPropertyChanging();
					this._strAPaterno = value;
					this.SendPropertyChanged("strAPaterno");
					this.OnstrAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAMaterno", DbType="VarChar(150)")]
		public string strAMaterno
		{
			get
			{
				return this._strAMaterno;
			}
			set
			{
				if ((this._strAMaterno != value))
				{
					this.OnstrAMaternoChanging(value);
					this.SendPropertyChanging();
					this._strAMaterno = value;
					this.SendPropertyChanged("strAMaterno");
					this.OnstrAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatSexo", DbType="Int NOT NULL")]
		public int idCatSexo
		{
			get
			{
				return this._idCatSexo;
			}
			set
			{
				if ((this._idCatSexo != value))
				{
					if (this._CatSexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatSexoChanging(value);
					this.SendPropertyChanging();
					this._idCatSexo = value;
					this.SendPropertyChanged("idCatSexo");
					this.OnidCatSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaNacimiento", DbType="DateTime NOT NULL")]
		public System.DateTime dteFechaNacimiento
		{
			get
			{
				return this._dteFechaNacimiento;
			}
			set
			{
				if ((this._dteFechaNacimiento != value))
				{
					this.OndteFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaNacimiento = value;
					this.SendPropertyChanged("dteFechaNacimiento");
					this.OndteFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatEstadoCivil", DbType="Int")]
		public System.Nullable<int> idCatEstadoCivil
		{
			get
			{
				return this._idCatEstadoCivil;
			}
			set
			{
				if ((this._idCatEstadoCivil != value))
				{
					if (this._CatEstadoCivil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._idCatEstadoCivil = value;
					this.SendPropertyChanged("idCatEstadoCivil");
					this.OnidCatEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutor_Ninio", Storage="_Ninio", ThisKey="id", OtherKey="idTutor")]
		public EntitySet<Ninio> Ninio
		{
			get
			{
				return this._Ninio;
			}
			set
			{
				this._Ninio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstadoCivil_Tutor", Storage="_CatEstadoCivil", ThisKey="idCatEstadoCivil", OtherKey="id", IsForeignKey=true)]
		public CatEstadoCivil CatEstadoCivil
		{
			get
			{
				return this._CatEstadoCivil.Entity;
			}
			set
			{
				CatEstadoCivil previousValue = this._CatEstadoCivil.Entity;
				if (((previousValue != value) 
							|| (this._CatEstadoCivil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEstadoCivil.Entity = null;
						previousValue.Tutor.Remove(this);
					}
					this._CatEstadoCivil.Entity = value;
					if ((value != null))
					{
						value.Tutor.Add(this);
						this._idCatEstadoCivil = value.id;
					}
					else
					{
						this._idCatEstadoCivil = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEstadoCivil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatSexo_Tutor", Storage="_CatSexo", ThisKey="idCatSexo", OtherKey="id", IsForeignKey=true)]
		public CatSexo CatSexo
		{
			get
			{
				return this._CatSexo.Entity;
			}
			set
			{
				CatSexo previousValue = this._CatSexo.Entity;
				if (((previousValue != value) 
							|| (this._CatSexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatSexo.Entity = null;
						previousValue.Tutor.Remove(this);
					}
					this._CatSexo.Entity = value;
					if ((value != null))
					{
						value.Tutor.Add(this);
						this._idCatSexo = value.id;
					}
					else
					{
						this._idCatSexo = default(int);
					}
					this.SendPropertyChanged("CatSexo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ninio(Ninio entity)
		{
			this.SendPropertyChanging();
			entity.Tutor = this;
		}
		
		private void detach_Ninio(Ninio entity)
		{
			this.SendPropertyChanging();
			entity.Tutor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombreUsuario;
		
		private string _strPassword;
		
		private int _idCatTipoUser;
		
		private EntityRef<CatTipoUser> _CatTipoUser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreUsuarioChanging(string value);
    partial void OnstrNombreUsuarioChanged();
    partial void OnstrPasswordChanging(string value);
    partial void OnstrPasswordChanged();
    partial void OnidCatTipoUserChanging(int value);
    partial void OnidCatTipoUserChanged();
    #endregion
		
		public User()
		{
			this._CatTipoUser = default(EntityRef<CatTipoUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombreUsuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string strNombreUsuario
		{
			get
			{
				return this._strNombreUsuario;
			}
			set
			{
				if ((this._strNombreUsuario != value))
				{
					this.OnstrNombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._strNombreUsuario = value;
					this.SendPropertyChanged("strNombreUsuario");
					this.OnstrNombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strPassword
		{
			get
			{
				return this._strPassword;
			}
			set
			{
				if ((this._strPassword != value))
				{
					this.OnstrPasswordChanging(value);
					this.SendPropertyChanging();
					this._strPassword = value;
					this.SendPropertyChanged("strPassword");
					this.OnstrPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatTipoUser", DbType="Int NOT NULL")]
		public int idCatTipoUser
		{
			get
			{
				return this._idCatTipoUser;
			}
			set
			{
				if ((this._idCatTipoUser != value))
				{
					if (this._CatTipoUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatTipoUserChanging(value);
					this.SendPropertyChanging();
					this._idCatTipoUser = value;
					this.SendPropertyChanged("idCatTipoUser");
					this.OnidCatTipoUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoUser_User", Storage="_CatTipoUser", ThisKey="idCatTipoUser", OtherKey="id", IsForeignKey=true)]
		public CatTipoUser CatTipoUser
		{
			get
			{
				return this._CatTipoUser.Entity;
			}
			set
			{
				CatTipoUser previousValue = this._CatTipoUser.Entity;
				if (((previousValue != value) 
							|| (this._CatTipoUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatTipoUser.Entity = null;
						previousValue.User.Remove(this);
					}
					this._CatTipoUser.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._idCatTipoUser = value.id;
					}
					else
					{
						this._idCatTipoUser = default(int);
					}
					this.SendPropertyChanged("CatTipoUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
